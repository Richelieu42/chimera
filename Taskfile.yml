version: '3'

# 全局变量
vars:
#  APP: chimera
#  SOURCE: internal/main.go
  APP: test
  SOURCE: test/test.go
  # 0 || 1
  CGO_ENABLED: 0
  VERSION: 0.0.1
  BUILDER:
    sh: whoami
  BUILD_DATE:
    sh: date '+%F'
  BUILD_TIME:
    sh: date '+%FT%T %A %Z'

tasks:
  default:
    cmds:
      - task: prepare
      #      - task: build-serial
      - task: build-parallel
  prepare:
    cmds:
      - go mod tidy
  # 串行
  build-serial:
    cmds:
      - task: windows-386
      - task: windows-amd64
      - task: darwin-arm64
      - task: linux-amd64
      - task: linux-amd64-noavx
      - task: linux-arm64
      - task: linux-mips64
      - task: linux-mips64le
      - task: linux-loong64
  # 并行
  build-parallel:
    deps:
      - task: windows-386
      - task: windows-amd64
      - task: darwin-arm64
      - task: linux-amd64
      - task: linux-amd64-noavx
      - task: linux-arm64
      - task: linux-mips64
      - task: linux-mips64le
      - task: linux-loong64
  windows-386:
    cmds:
      - task: build
        vars: { OS: windows, ARCH: 386, CC: i686-w64-mingw32-gcc, CXX: i686-w64-mingw32-g++, TAGS: jsoniter, UPX: true }
  windows-amd64:
    cmds:
      - task: build
        vars: { OS: windows, ARCH: amd64, CC: x86_64-w64-mingw32-gcc, CXX: x86_64-w64-mingw32-g++, TAGS: jsoniter, UPX: true }
  darwin-arm64:
    cmds:
      - task: build
        vars: { OS: darwin, ARCH: arm64, TAGS: jsoniter, UPX: false }
  linux-amd64:
    cmds:
      - task: build
        vars: { OS: linux, ARCH: amd64, CC: x86_64-linux-musl-gcc, CXX: x86_64-linux-musl-g++, TAGS: sonic avx, UPX: true }
  linux-amd64-noavx:
    cmds:
      - task: build
        vars: { OS: linux, ARCH: amd64, CC: x86_64-linux-musl-gcc, CXX: x86_64-linux-musl-g++, TAGS: jsoniter, UPX: true }
  linux-arm64:
    cmds:
      - task: build
        vars: { OS: linux, ARCH: arm64, CC: x86_64-linux-musl-gcc, CXX: x86_64-linux-musl-g++, TAGS: jsoniter, UPX: true }
  linux-mips64:
    cmds:
      - task: build
        vars: { OS: linux, ARCH: mips64, CC: x86_64-linux-musl-gcc, CXX: x86_64-linux-musl-g++, TAGS: jsoniter, UPX: false }
  linux-mips64le:
    cmds:
      - task: build
        vars: { OS: linux, ARCH: mips64le, CC: x86_64-linux-musl-gcc, CXX: x86_64-linux-musl-g++, TAGS: jsoniter, UPX: false }
  linux-loong64:
    cmds:
      - task: build
        vars: { OS: linux, ARCH: loong64, CC: x86_64-linux-musl-gcc, CXX: x86_64-linux-musl-g++, TAGS: jsoniter, UPX: false }
  build:
    vars:
      OS: '{{default "UNKNOWN" .OS}}'
      ARCH: '{{default "UNKNOWN" .ARCH}}'
      CC: '{{default "cc" .CC}}'
      CXX: '{{default "c++" .CXX}}'
      EXT: '{{if eq .OS "windows"}}.exe{{end}}'
      TAGS: '{{default "" .TAGS}}'
      UPX: '{{default "false" .UPX}}'
      NOAVX: '{{if and (eq .TAGS "sonic avx") (ne .ARCH "amd64")}}-noavx{{end}}'
      NAME: '{{.APP}}-{{.VERSION}}-{{.OS}}-{{.ARCH}}{{.NOAVX}}{{.EXT}}'
      TARGET: '{{.NAME}}'
    cmds:
      - echo {{.TARGET}}
      - rm -rf {{.TARGET}}  # 文件可以不存在
      - CGO_ENABLED={{.CGO_ENABLED}} CC={{.CC}} CXX={{.CXX}} GOOS={{.OS}} GOARCH={{.ARCH}} go build -o {{.TARGET}} -ldflags "-X 'main.Version={{.VERSION}}' -X 'main.Builder={{.BUILDER}}' -X 'main.BuildTime={{.BUILD_TIME}}' -s -w" -tags="{{.TAGS}}" {{.SOURCE}}
      - if [ {{.UPX}} == "true" ]; then upx -9 {{.TARGET}}; fi
