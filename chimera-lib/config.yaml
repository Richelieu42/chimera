logrus:
  # 日志级别（默认debug）
  level: debug
  # 是否输出基本信息（默认true）
  printBasic: true

gin:
  # http端口号（默认-1）
  port: 80
  # 日志带颜色输出?（默认true）
  colorful: true
  # 是否开启pprof路由？（默认true）PS: 只应该在性能测试的时候才在代码中引入pprof.
  pprof: false
  middleware:
    # 是否开启gzip压缩（默认: false）
    gzip: false
    # 全局对request body的大小限制（整数; 单位: MB; 默认-1; <=0: 不做限制; >0: 进行限制）
    # 不建议在此处配置，想限制上传文件大小可以在handler中进行处理
    # TODO: 因为http.MaxBytesReader()，如果涉及"请求转发（代理）"，转发方不要全局配置此属性，否则会导致: 有时成功，有时代理失败（error），有时http客户端失败
#    bodyLimit: 1
    xFrameOptions:
    cors:
      # cors配置是否生效？
      # 默认: false（下面的origins配置将无效）
      access: true
      # 支持的Origin(s)，即响应头中的Access-Control-Allow-Origin
      # (1) 默认: 支持所有的Origin（即动态支持请求的Origin，并非"*"）
      # (2) 支持通配符"*"
#      origins:
#        - "https://*.github.com"
#        - "https://api.*"
#        - "http://*"
#        - "*.golang.org"
#        - "https://facebook.com"
    # referer验证（referer: 来源; 参考了nginx的referer配置）
#    referer:
#      -
#        # 对路由的正则判断（不满足则默认通过该referer验证）
#        route: "*.act$"
#        # referer为""的请求，是否通过？
#        none: false
#        # 非http或https开头的请求，是否通过？
#        blocked: false
#        # (1) 支持通配: "*"; (2) 支持边界匹配: "^" || "$"; (3) 忽略端口（即不要有":{port}"）; (4) 不区分大小写
#        serverNames:
##          - 127.0.0.1
#          - "*.yozo.com"
  ssl:
    # 证书文件
    certFile: /Users/richelieu/GolandProjects/chimera/chimera-lib/ssl.pem
    # key文件
    keyFile: /Users/richelieu/GolandProjects/chimera/chimera-lib/ssl.key
    # https端口号（默认-1）
    port: 443

redis:
  userName:
  password:
  # 默认值: -1
  # 0: 单点
  # 1: 主从（暂不支持）
  # 2: 哨兵
  # 3: cluster
  mode: 0
  singleNodeConfig:
    addr: 127.0.0.1:6379
    db: 0
  sentinelConfig:
    masterName: mymaster
    sentinelAddrs:
      - 172.18.21.17:26380
      - 172.18.21.17:26381
      - 172.18.21.17:26382
    db: 0
  clusterConfig:
    # 可以是: 所有的 master 的地址，也可以是: 所有的 master + slave 的地址（推荐）.
    addrs:
      - 192.168.1.25:6380
      - 192.168.1.25:6381
      - 192.168.1.25:6382
      - 192.168.1.25:6383
      - 192.168.1.25:6384
      - 192.168.1.25:6385

#rocketmq5:
#  endpoint: localhost:8081
#  # 用于验证endpoint（收发消息）的topic
#  topicToVerify: test
#  credentials:
#    accessKey:
#    accessSecret:

pulsar:
  addresses:
    - 127.0.0.1:6650
  verify:
    topic: test
    print: true

etcd:
  endpoints:
    - 127.0.0.1:2379
  # etcd客户端的日志输出（默认: 输出到控制台）
  logPath: etcd-client.log

rocketmq5:
  endpoints:
    - localhost:8081
  credentials:
    accessKey:
    accessSecret:
    securityToken:
  validatedTopic: 

